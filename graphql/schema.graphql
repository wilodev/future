type Activity {
  id: ID!
  imageUrl: URL
  shortDescription: String!
  steps: [Step!]!
  title: String!
}

type Article implements BaseContent & HtmlBodyContent {
  bodyForMobileApp: HTML!
  copyrightForMobileApp: HTML
  id: ID!
}

interface BaseContent {
  id: ID!
}

enum BusinessModel {
  EXPERT_TRACK_ACCESS
  NO_PURCHASE
  PAID_FOR_ACCESS
  SPONSORED_ACCESS
  UPGRADED_ACCESS
}

union Content = Article | UnsupportedContent | VideoArticle

type CookieProSettings {
  autoblockScriptSrc: URL!
  countryCode: String
  domainId: String!
  flGdprCompliant: Boolean
  id: ID!
  sdkScriptSrc: URL!
  stateCode: String
}

type Course {
  id: ID!
  organisation: Organisation!
  type: String!
}

type CourseEnrolment {
  """
  The expiry time of the enrolment; null if the user has long term access.
  """
  accessExpiryTime: ISO8601DateTime
  accessIsExpired: Boolean!
  createdAt: ISO8601DateTime!
  id: ID!
  lastStepVisit: StepVisit
  run: Run!
  stepProgressByStep(stepId: ID!): StepProgress!
  stepProgresses: [StepProgress!]!
  stepsCompletedRatio: Float!
}

type Currency {
  code: String!
  symbol: String!
}

type DiscountWithDuration {
  discount: PercentageDiscount!
  duration: Duration!
}

type Duration {
  billingPeriods: Int!
  description: String!
}

type FeatureFeedbackResponse {
  additionalComments: String
  featureKey: String!
  id: ID!
  question: String!
  rating: Rating!
  url: String
}

"""
Autogenerated input type of FeatureFeedbackResponseCreateMutation
"""
input FeatureFeedbackResponseCreateMutationInput {
  additionalComments: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  featureKey: String!
  question: String!
  rating: Rating!
  url: String
}

"""
Autogenerated return type of FeatureFeedbackResponseCreateMutation
"""
type FeatureFeedbackResponseCreateMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  featureFeedbackResponse: FeatureFeedbackResponse
}

type FeaturedCourse {
  """
  Average score from review ratings
  """
  averageReviewScore: Int

  """
  Number of hours per week for course run
  """
  hoursPerWeek: Int

  """
  ID of course run
  """
  id: ID

  """
  Image of course
  """
  image: ImageLink

  """
  Introduction text describing the course
  """
  introduction: String!

  """
  ID of course run
  """
  key: String

  """
  Course label
  """
  label: String

  """
  Number of weeks the course run lasts
  """
  numberOfWeeks: Int

  """
  Organisation logo image
  """
  organisationLogo: ImageLink

  """
  Link to course information
  """
  path: URL!

  """
  Slug identifying course run
  """
  runSlug: String!

  """
  Title of course
  """
  title: String!

  """
  Total number of reviews
  """
  totalReviews: Int

  """
  Links to add or remove course from wishlist
  """
  wishlistActions: WishlistActions
}

"""
A string containing HTML.
"""
scalar HTML

interface HtmlBodyContent {
  bodyForMobileApp: HTML!
  copyrightForMobileApp: HTML
}

enum HttpMethod {
  DELETE
  GET
  POST
  PUT
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type ImageLink {
  """
  Alternative text for image
  """
  alt: String

  """
  Location of image
  """
  url: URL!
}

type LearningOutcome {
  id: ID!
  text: String!
  verb: LearningOutcomeVerb!
}

enum LearningOutcomeVerb {
  APPLY
  ASSESS
  CALCULATE
  CLASSIFY
  CODE
  COLLABORATE
  COLLECT
  COMPARE
  CONTRIBUTE
  CREATE
  CRITIQUE
  DEBATE
  DEMONSTRATE
  DESCRIBE
  DESIGN
  DEVELOP
  DISCUSS
  ENGAGE
  EVALUATE
  EXPERIMENT
  EXPLAIN
  EXPLORE
  GRADE
  IDENTIFY
  IMPROVE
  INTERPRET
  INVESTIGATE
  JUSTIFY
  LEAD
  MODEL
  MODIFY
  PERFORM
  PRACTICE
  PRESENT
  PRODUCE
  RECORD
  REFLECT
  REPORT
  SOLVE
  SUMMARISE
  SYNTHESISE
}

type Money {
  amount: Int!
  currency: Currency!
}

type Mutation {
  """
  Submit feedback for a feature
  """
  featureFeedbackResponseCreate(
    """
    Parameters for FeatureFeedbackResponseCreateMutation
    """
    input: FeatureFeedbackResponseCreateMutationInput!
  ): FeatureFeedbackResponseCreateMutationPayload

  """
  Create a learning outcome for a run
  """
  runLearningOutcomeCreate(
    """
    Parameters for RunLearningOutcomeCreateMutation
    """
    input: RunLearningOutcomeCreateMutationInput!
  ): RunLearningOutcomeCreateMutationPayload

  """
  Delete a learning outcome from a run
  """
  runLearningOutcomeDelete(
    """
    Parameters for RunLearningOutcomeDeleteMutation
    """
    input: RunLearningOutcomeDeleteMutationInput!
  ): RunLearningOutcomeDeleteMutationPayload

  """
  Mark a step as complete
  """
  stepProgressComplete(
    """
    Parameters for StepProgressCompleteMutation
    """
    input: StepProgressCompleteMutationInput!
  ): StepProgressCompleteMutationPayload

  """
  Undoes the completion of a step
  """
  stepProgressUndo(
    """
    Parameters for StepProgressUndoMutation
    """
    input: StepProgressUndoMutationInput!
  ): StepProgressUndoMutationPayload

  """
  Keep track of the last visited step
  """
  stepVisitTrack(
    """
    Parameters for StepVisitTrackMutation
    """
    input: StepVisitTrackMutationInput!
  ): StepVisitTrackMutationPayload
  userAuthenticate(
    """
    Parameters for UserAuthenticate
    """
    input: UserAuthenticateInput!
  ): UserAuthenticatePayload
}

type Organisation {
  id: String!
  slug: String!
  title: String!
}

type PercentageDiscount {
  amount: Int
}

type Price {
  amount: Int!
  currency: String!
}

enum ProfileImageVersion {
  PROFILE_IMAGE
  THUMBNAIL
}

type Query {
  """
  Indicates whether the current user can perform the given action.
  """
  can(action: QueryAction!): Boolean!

  """
  Find content by step ID.
  """
  contentByStepId(id: ID!): Content
  cookieProSettings(ipAddress: String!): CookieProSettings!

  """
  Find a course enrolment by ID.
  """
  courseEnrolment(id: ID!): CourseEnrolment
  csrfToken: String!

  """
  The currently authenticated user.
  """
  currentUser: User
  featuredCourses: [FeaturedCourse!]

  """
  Find a run by ID.
  """
  run(id: ID!): Run

  """
  Find a run by slug and position.
  """
  runBySlugAndPosition(position: Int!, slug: String!): Run

  """
  Find active sales.
  """
  sales: [Sale!]!

  """
  Find a step by ID.
  """
  step(id: ID!): Step

  """
  Fetch subject categories.
  """
  subjectCategories: [SubjectCategory!]!

  """
  An example field added by the generator
  """
  testField: String!

  """
  Find a user by ID.
  """
  user(id: ID!): User

  """
  Find a user by email address.
  """
  userByEmail(email: String!): User
}

enum QueryAction {
  access_course_creator
  access_learning_manager
}

enum Rating {
  NEGATIVE
  NEUTRAL
  POSITIVE
}

type Run {
  businessModel: BusinessModel!

  """
  Indicates whether the current user can perform the given action on this resource.
  """
  can(action: RunAction!): Boolean!
  course: Course!
  courseScoreCalculationKey: String!
  datedTitle: String!
  extendedEnrolmentWindowLength: Int!
  firstStep: Step
  fullTitle: String!
  hasSponsoredAccess: Boolean!
  id: ID!

  """
  Returns self if the current user can perform the given action on this resource.
  """
  ifCan(action: RunAction!): Run
  imageAlt: String
  imageUrl(version: RunImageVersion): String!
  introduction: String!
  isInviteOnly: Boolean!
  isOpenForEnrolment: Boolean!
  isPublished: Boolean!
  isStarted: Boolean!
  isTiiEnabled: Boolean!
  learningOutcomes: [LearningOutcome!]!
  organisation: Organisation!
  price: Price
  shortTitle: String!
  startTime: ISO8601DateTime
  steps: [Step!]!
  weeks: [Week!]!
  weeksCount: Int!
}

enum RunAction {
  delete
  duplicate_cross_course
  duplicate_run_details
  facilitate
  manage_team
  participate
  publish
  read
  read_announcements
  read_key_info
  read_proof_products
  update
  update_co_branding_organisations
  update_partner_surveys
  update_portfolio
  update_pre_course
  update_proof_products
  update_trailer
  update_tutor_marked_assignments
  view_marketing
  view_stats
}

enum RunImageVersion {
  HEADER
  HEADER_LARGE
  HEADER_MEDIUM
  HEADER_SMALL
  HERO
  PROMO_LARGE
  PROMO_MEDIUM
  PROMO_SMALL
  REGULAR
  THUMBNAIL
}

"""
Autogenerated input type of RunLearningOutcomeCreateMutation
"""
input RunLearningOutcomeCreateMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  runId: ID!
  text: String!
  verb: LearningOutcomeVerb!
}

"""
Autogenerated return type of RunLearningOutcomeCreateMutation
"""
type RunLearningOutcomeCreateMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  learningOutcome: LearningOutcome
}

"""
Autogenerated input type of RunLearningOutcomeDeleteMutation
"""
input RunLearningOutcomeDeleteMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  learningOutcomeId: ID!
  runId: ID!
}

"""
Autogenerated return type of RunLearningOutcomeDeleteMutation
"""
type RunLearningOutcomeDeleteMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  learningOutcome: LearningOutcome
}

type Sale {
  """
  The discount and how long it lasts.
  """
  discountWithDuration: DiscountWithDuration!

  """
  When the sale ends.
  """
  endTime: ISO8601DateTime

  """
  Whether the sale is active.
  """
  isActive: Boolean!

  """
  The associated product.
  """
  product: SaleProduct

  """
  URL for page listing sale terms and conditions.
  """
  termsUrl: String!
}

type SaleProduct {
  preSalePrice: Money!
  price: Money!
  priceSuffix: String!
  sku: String!
}

type Step {
  """
  The type of step
  """
  contentType: String!
  id: ID!

  """
  Mobile app SSO url for accessing unsupported steps in a WebView
  """
  mobileSsoUrl: URL!
  nextStep: Step

  """
  The step number
  """
  number: String!
  previousStep: Step

  """
  The short version of the user-facing step type label.
  """
  shortStepTypeLabel: String!
  title: String!
  url: URL!
}

"""
Step completion progression data.
"""
type StepProgress {
  id: ID!

  """
  Timestamp of when step was last completed.
  """
  lastCompletedAt: ISO8601DateTime
  step: Step!
}

"""
Autogenerated input type of StepProgressCompleteMutation
"""
input StepProgressCompleteMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  stepId: ID!
}

"""
Autogenerated return type of StepProgressCompleteMutation
"""
type StepProgressCompleteMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  stepProgress: StepProgress!
}

"""
Autogenerated input type of StepProgressUndoMutation
"""
input StepProgressUndoMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  stepId: ID!
}

"""
Autogenerated return type of StepProgressUndoMutation
"""
type StepProgressUndoMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  stepProgress: StepProgress!
}

"""
A course enrolment's last visited Step.
"""
type StepVisit {
  id: ID!
  step: Step
}

"""
Autogenerated input type of StepVisitTrackMutation
"""
input StepVisitTrackMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  stepId: ID!
  visitedAt: ISO8601DateTime!
}

"""
Autogenerated return type of StepVisitTrackMutation
"""
type StepVisitTrackMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  step: Step
  visitedAt: ISO8601DateTime
}

type SubjectCategory {
  """
  The icon for the subject category
  """
  icon: URL!

  """
  The title of the subject category
  """
  title: String!

  """
  Links to the topic landing pages
  """
  topicLandingPages(pages: Int = 12): [TopicLandingPage!]!

  """
  Location of the subject category page
  """
  url: URL!
}

type TopicLandingPage {
  title: String
  url: URL
}

"""
A transcript for a video
"""
type Transcript {
  id: ID!
  paragraphs: [TranscriptParagraph!]!
}

type TranscriptParagraph {
  text: HTML!
  timestamp: String!
}

"""
A string containing an URL.
"""
scalar URL

type UnsupportedContent implements BaseContent {
  id: ID!
}

type User {
  activeCourseEnrolments: [CourseEnrolment!]!
  email: String!
  firstName: String!
  fullName: String!

  """
  Whether the user has any subscriptions
  """
  hasSubscriptions: Boolean!
  id: ID!
  imageUrl(version: ProfileImageVersion): String
  initials: String!
  testIdentity: String!

  """
  Count of notifications that the user has not read yet
  """
  unreadNotificationsCount: Int!

  """
  Web preferences for the user e.g. whether to show the notification badge
  """
  webPreferences: WebPreferences!
}

"""
Autogenerated input type of UserAuthenticate
"""
input UserAuthenticateInput {
  clientId: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
}

"""
Autogenerated return type of UserAuthenticate
"""
type UserAuthenticatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  isAuthenticated: Boolean!
  token: String
}

type ValidationError {
  """
  The field that caused the error
  """
  field: [String!]

  """
  The error message.
  """
  message: String!
}

type Video {
  englishTranscript: Transcript
  hlsUrl: URL
  id: ID!
  posterImageUrl: URL
  status: VideoStatus!
}

type VideoArticle implements BaseContent & HtmlBodyContent {
  bodyForMobileApp: HTML!
  copyrightForMobileApp: HTML
  id: ID!
  video: Video!
}

enum VideoStatus {
  available
  failed
  processing
}

type WebPreferences {
  """
  Whether to display the notifications badge for the user
  """
  displayNotificationsBadge: Boolean!
}

type Week {
  activities: [Activity!]!

  """
  Indicates whether the current user can perform the given action on this resource.
  """
  can(action: WeekAction!): Boolean!
  id: ID!

  """
  Returns self if the current user can perform the given action on this resource.
  """
  ifCan(action: WeekAction!): Week
  number: Int!
  title: String
}

enum WeekAction {
  read_activities
}

type WishlistAction {
  httpMethod: HttpMethod!
  url: String!
}

type WishlistActions {
  add: WishlistAction
  remove: WishlistAction
}

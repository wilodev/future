{
  "v": "5.5.7",
  "meta": { "g": "LottieFiles AE 0.1.21", "a": "", "k": "", "d": "", "tc": "" },
  "fr": 60,
  "ip": 0,
  "op": 81,
  "w": 96,
  "h": 96,
  "nm": "Busy",
  "ddd": 0,
  "assets": [],
  "layers": [
    {
      "ddd": 0,
      "ind": 1,
      "ty": 4,
      "nm": "Ellipse 2",
      "sr": 1,
      "ks": {
        "o": {
          "a": 0,
          "k": 100,
          "ix": 11,
          "x": "var $bm_rt;\nfunction cubic(t, tMin, tMax, value1, value2) {\n    if (arguments.length !== 5)\n        return value;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    var c = clamp($bm_div($bm_sub(t, tMin), $bm_div(b, 2)), 0, 2);\n    if (c < 1)\n        return $bm_sum($bm_mul($bm_div(a, 2), Math.pow(c, 3)), value1);\n    c = $bm_sub(c, 2);\n    return $bm_sum($bm_mul($bm_div(a, 2), $bm_sum(Math.pow(c, 3), 2)), value1);\n}\n;\nvar animationStartTime = 1;\nvar animationEndTime = 2;\nvar startValue = value;\nvar endValue = $bm_mul(value, 2);\nif (numKeys > 0) {\n    var nearestKeyIndex = nearestKey(time).index;\n    if (key(nearestKeyIndex).time > time)\n        nearestKeyIndex--;\n    if (nearestKeyIndex === 0 || nearestKeyIndex === numKeys) {\n        startValue = endValue = value;\n    } else {\n        animationStartTime = key(nearestKeyIndex).time;\n        animationEndTime = key($bm_sum(nearestKeyIndex, 1)).time;\n        startValue = key(nearestKeyIndex).value;\n        endValue = key($bm_sum(nearestKeyIndex, 1)).value;\n    }\n}\n$bm_rt = cubic(time, animationStartTime, animationEndTime, startValue, endValue);"
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10,
          "x": "var $bm_rt;\nfunction cubic(t, tMin, tMax, value1, value2) {\n    if (arguments.length !== 5)\n        return value;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    var c = clamp($bm_div($bm_sub(t, tMin), $bm_div(b, 2)), 0, 2);\n    if (c < 1)\n        return $bm_sum($bm_mul($bm_div(a, 2), Math.pow(c, 3)), value1);\n    c = $bm_sub(c, 2);\n    return $bm_sum($bm_mul($bm_div(a, 2), $bm_sum(Math.pow(c, 3), 2)), value1);\n}\n;\nvar animationStartTime = 1;\nvar animationEndTime = 2;\nvar startValue = value;\nvar endValue = $bm_mul(value, 2);\nif (numKeys > 0) {\n    var nearestKeyIndex = nearestKey(time).index;\n    if (key(nearestKeyIndex).time > time)\n        nearestKeyIndex--;\n    if (nearestKeyIndex === 0 || nearestKeyIndex === numKeys) {\n        startValue = endValue = value;\n    } else {\n        animationStartTime = key(nearestKeyIndex).time;\n        animationEndTime = key($bm_sum(nearestKeyIndex, 1)).time;\n        startValue = key(nearestKeyIndex).value;\n        endValue = key($bm_sum(nearestKeyIndex, 1)).value;\n    }\n}\n$bm_rt = cubic(time, animationStartTime, animationEndTime, startValue, endValue);"
        },
        "p": {
          "a": 1,
          "k": [
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 0,
              "s": [72, 48, 0],
              "to": [-8, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 40,
              "s": [24, 48, 0],
              "to": [0, 0, 0],
              "ti": [-8, 0, 0]
            },
            { "t": 80, "s": [72, 48, 0] }
          ],
          "ix": 2,
          "x": "var $bm_rt;\nfunction cubic(t, tMin, tMax, value1, value2) {\n    if (arguments.length !== 5)\n        return value;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    var c = clamp($bm_div($bm_sub(t, tMin), $bm_div(b, 2)), 0, 2);\n    if (c < 1)\n        return $bm_sum($bm_mul($bm_div(a, 2), Math.pow(c, 3)), value1);\n    c = $bm_sub(c, 2);\n    return $bm_sum($bm_mul($bm_div(a, 2), $bm_sum(Math.pow(c, 3), 2)), value1);\n}\n;\nvar animationStartTime = 1;\nvar animationEndTime = 2;\nvar startValue = value;\nvar endValue = $bm_mul(value, 2);\nif (numKeys > 0) {\n    var nearestKeyIndex = nearestKey(time).index;\n    if (key(nearestKeyIndex).time > time)\n        nearestKeyIndex--;\n    if (nearestKeyIndex === 0 || nearestKeyIndex === numKeys) {\n        startValue = endValue = value;\n    } else {\n        animationStartTime = key(nearestKeyIndex).time;\n        animationEndTime = key($bm_sum(nearestKeyIndex, 1)).time;\n        startValue = key(nearestKeyIndex).value;\n        endValue = key($bm_sum(nearestKeyIndex, 1)).value;\n    }\n}\n$bm_rt = cubic(time, animationStartTime, animationEndTime, startValue, endValue);"
        },
        "a": {
          "a": 0,
          "k": [0, 0, 0],
          "ix": 1,
          "x": "var $bm_rt;\nfunction cubic(t, tMin, tMax, value1, value2) {\n    if (arguments.length !== 5)\n        return value;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    var c = clamp($bm_div($bm_sub(t, tMin), $bm_div(b, 2)), 0, 2);\n    if (c < 1)\n        return $bm_sum($bm_mul($bm_div(a, 2), Math.pow(c, 3)), value1);\n    c = $bm_sub(c, 2);\n    return $bm_sum($bm_mul($bm_div(a, 2), $bm_sum(Math.pow(c, 3), 2)), value1);\n}\n;\nvar animationStartTime = 1;\nvar animationEndTime = 2;\nvar startValue = value;\nvar endValue = $bm_mul(value, 2);\nif (numKeys > 0) {\n    var nearestKeyIndex = nearestKey(time).index;\n    if (key(nearestKeyIndex).time > time)\n        nearestKeyIndex--;\n    if (nearestKeyIndex === 0 || nearestKeyIndex === numKeys) {\n        startValue = endValue = value;\n    } else {\n        animationStartTime = key(nearestKeyIndex).time;\n        animationEndTime = key($bm_sum(nearestKeyIndex, 1)).time;\n        startValue = key(nearestKeyIndex).value;\n        endValue = key($bm_sum(nearestKeyIndex, 1)).value;\n    }\n}\n$bm_rt = cubic(time, animationStartTime, animationEndTime, startValue, endValue);"
        },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "d": 1,
              "ty": "el",
              "s": { "a": 0, "k": [8, 8], "ix": 2 },
              "p": { "a": 0, "k": [0, 0], "ix": 3 },
              "nm": "Ellipse Path 1",
              "mn": "ADBE Vector Shape - Ellipse",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [0.792156875134, 0.792156875134, 0.800000011921, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [300, 300], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Ellipse 2",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 300,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 2,
      "ty": 4,
      "nm": "Ellipse 1",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": {
          "a": 1,
          "k": [
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 0,
              "s": [24, 48, 0],
              "to": [8, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 40,
              "s": [72, 48, 0],
              "to": [0, 0, 0],
              "ti": [8, 0, 0]
            },
            { "t": 80, "s": [24, 48, 0] }
          ],
          "ix": 2,
          "x": "var $bm_rt;\nfunction cubic(t, tMin, tMax, value1, value2) {\n    if (arguments.length !== 5)\n        return value;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    var c = clamp($bm_div($bm_sub(t, tMin), $bm_div(b, 2)), 0, 2);\n    if (c < 1)\n        return $bm_sum($bm_mul($bm_div(a, 2), Math.pow(c, 3)), value1);\n    c = $bm_sub(c, 2);\n    return $bm_sum($bm_mul($bm_div(a, 2), $bm_sum(Math.pow(c, 3), 2)), value1);\n}\n;\nvar animationStartTime = 1;\nvar animationEndTime = 2;\nvar startValue = value;\nvar endValue = $bm_mul(value, 2);\nif (numKeys > 0) {\n    var nearestKeyIndex = nearestKey(time).index;\n    if (key(nearestKeyIndex).time > time)\n        nearestKeyIndex--;\n    if (nearestKeyIndex === 0 || nearestKeyIndex === numKeys) {\n        startValue = endValue = value;\n    } else {\n        animationStartTime = key(nearestKeyIndex).time;\n        animationEndTime = key($bm_sum(nearestKeyIndex, 1)).time;\n        startValue = key(nearestKeyIndex).value;\n        endValue = key($bm_sum(nearestKeyIndex, 1)).value;\n    }\n}\n$bm_rt = cubic(time, animationStartTime, animationEndTime, startValue, endValue);"
        },
        "a": {
          "a": 0,
          "k": [0, 0, 0],
          "ix": 1,
          "x": "var $bm_rt;\nfunction cubic(t, tMin, tMax, value1, value2) {\n    if (arguments.length !== 5)\n        return value;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    var c = clamp($bm_div($bm_sub(t, tMin), $bm_div(b, 2)), 0, 2);\n    if (c < 1)\n        return $bm_sum($bm_mul($bm_div(a, 2), Math.pow(c, 3)), value1);\n    c = $bm_sub(c, 2);\n    return $bm_sum($bm_mul($bm_div(a, 2), $bm_sum(Math.pow(c, 3), 2)), value1);\n}\n;\nvar animationStartTime = 1;\nvar animationEndTime = 2;\nvar startValue = value;\nvar endValue = $bm_mul(value, 2);\nif (numKeys > 0) {\n    var nearestKeyIndex = nearestKey(time).index;\n    if (key(nearestKeyIndex).time > time)\n        nearestKeyIndex--;\n    if (nearestKeyIndex === 0 || nearestKeyIndex === numKeys) {\n        startValue = endValue = value;\n    } else {\n        animationStartTime = key(nearestKeyIndex).time;\n        animationEndTime = key($bm_sum(nearestKeyIndex, 1)).time;\n        startValue = key(nearestKeyIndex).value;\n        endValue = key($bm_sum(nearestKeyIndex, 1)).value;\n    }\n}\n$bm_rt = cubic(time, animationStartTime, animationEndTime, startValue, endValue);"
        },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "d": 1,
              "ty": "el",
              "s": { "a": 0, "k": [8, 8], "ix": 2 },
              "p": { "a": 0, "k": [0, 0], "ix": 3 },
              "nm": "Ellipse Path 1",
              "mn": "ADBE Vector Shape - Ellipse",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [0.290196090937, 0.301960796118, 0.333333343267, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [300, 300], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Ellipse 1",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 300,
      "st": 0,
      "bm": 0
    }
  ],
  "markers": []
}
